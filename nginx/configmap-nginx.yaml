apiVersion: v1
kind: ConfigMap

metadata:
  namespace: singouins
  name: sep-backend-nginx
  labels:
    tier: sep-backend
data:
  htpasswd : |
    user1:$2y$11$BCRYPT HASHED PASSWORD
    user2:$2y$11$BCRYPT HASHED PASSWORD
  config : |

    #
    # http {}
    #

    log_format maxlog         '$proxy_protocol_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" "$host"';

    ssl_session_cache         shared:SSL:10m;
    ssl_session_timeout       1440m;
    ssl_session_tickets       off;

    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;

    # Mandatory for wss
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    #
    # <nginx-exporter>
    #

    server {
      listen      8080;

      location /stub_status {
          stub_status;
          allow 127.0.0.1;
          deny all;
      }
    }

    #
    # Default server
    #

    server {
      listen        80  default_server proxy_protocol;
      listen        443 default_server ssl proxy_protocol;
      access_log    off;
      error_log     off;
      log_not_found off;
      deny          all;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

    }

    #
    # <WIKI>
    #
    server {
      listen      443 ssl proxy_protocol;
      server_name wiki.<SEP_DOMAIN>;
      access_log  /var/log/nginx/access.log maxlog;
      add_header  Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

      client_max_body_size      10M;
      client_body_buffer_size   10M;

      location / {
        proxy_pass              http://<SVC_WIKI>:3000;
        proxy_http_version      1.1;
        proxy_buffers           16 16k;
        proxy_buffer_size       16k;
        proxy_set_header        Host              $host;
        proxy_set_header        X-Real-IP         $proxy_protocol_addr;
        proxy_set_header        X-Forwarded-For   $proxy_protocol_addr;
        proxy_set_header        X-Forwarded-Proto $scheme;
      }
    }

    #
    # <API>
    #
    server {
      listen      443 ssl proxy_protocol;
      server_name api.<SEP_DOMAIN>;
      access_log  /var/log/nginx/access.log maxlog;
      add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

      location / {
        proxy_pass              http://<SVC_API>:5000;
        proxy_http_version      1.1;
        proxy_buffers           16 16k;
        proxy_buffer_size       16k;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $proxy_protocol_addr;
        proxy_set_header        X-Forwarded-For $proxy_protocol_addr;
      }
    }

    #
    # <REDCO>
    #
    server {
      listen      443 ssl proxy_protocol;
      server_name redco.<SEP_DOMAIN>;
      access_log  /var/log/nginx/access.log maxlog;
      add_header  Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

      location / {
        auth_basic              "REDCO Basic Auth";
        auth_basic_user_file    /etc/nginx/htpasswd/htpasswd;
        proxy_pass              http://<SVC_REDCO>:8081;
        proxy_http_version      1.1;
        proxy_buffers           16 16k;
        proxy_buffer_size       16k;
      }
    }

    #
    # <GRAFANA>
    #
    server {
      listen      443 ssl proxy_protocol;
      server_name graph.<SEP_DOMAIN>;
      access_log  /var/log/nginx/access.log maxlog;
      add_header  Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

      location / {
        proxy_pass              http://<SVC_GRAFANA>:3000;
        proxy_http_version      1.1;
        proxy_buffers           16 16k;
        proxy_buffer_size       16k;
      }
    }

    #
    # <GAMES>
    #
    # PROD
    server {
      listen      443 ssl proxy_protocol;
      server_name games.<SEP_DOMAIN>;
      access_log  /var/log/nginx/access.log maxlog;
      add_header  Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

      location / {
        index                index.html;
        root                 /var/www/websites/games/games.<SEP_DOMAIN>;
      }
    }

    #
    # <WEBSOCKET>
    #
    # PROD
    server {
      listen      443 ssl proxy_protocol;
      server_name ws.<SEP_DOMAIN>;
      access_log  /var/log/nginx/access.log maxlog;
      add_header  Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_certificate     /etc/letsencrypt/live/<SEP_DOMAIN>/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/<SEP_DOMAIN>/privkey.pem;

      location / {
        proxy_pass              http://<SVC_WSS>:5000;
        proxy_http_version      1.1;
        proxy_buffers           16 16k;
        proxy_buffer_size       16k;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $proxy_protocol_addr;
        proxy_set_header        X-Forwarded-For $proxy_protocol_addr;
        proxy_set_header        Upgrade         $http_upgrade;
        proxy_set_header        Connection      "upgrade";
      }
    }
