# https://opstrace.com/docs/guides/user/instrumenting-a-k8s-cluster#5-deploy-promtail-in-the-k8s-cluster-for-collecting-and-pushing-logs
# Nginx   regex: https://regex101.com/r/udP0Lh/1
# Metrics regex: https://regex101.com/r/zGXXJ2/1
# Redis   regex: https://regex101.com/r/XwIoVS/1
# API     regex: https://regex101.com/r/P7pDEe/1
# Prom*   regex: https://regex101.com/r/WAaBhw/1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sep-backend-promtail-configmap
  namespace: singouins
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      http_listen_address: 0.0.0.0
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    scrape_configs:
    - pipeline_stages:
      - docker:
      - match:
          selector: '{k8s_container_name="sep-backend-nginx"}'
          stages:
          - regex:
              expression: 'stdout F ([^ ]*|-) - ([^ ]*|-) \[.*\] "[^ ]+ [^ ]+ [^ ]+" ((?P<status_warn>(4\d\d))|(?P<status_crit>(5\d\d))|(?P<status_info>(10\d|20\d|30\d))) [\d]+ "[^"]*" "[^"]*"? "((?P<http_host_none>[-])|(?P<http_host>[a-z0-9.]*))"?'
          - template:
              source: level
              template: "{{if .http_host_none}}TRACE{{else if .status_warn}}WARN{{else if .status_crit}}CRIT{{else if .status_info}}INFO{{end}}"
          - labels:
              level:
      - match:
          selector: '{k8s_container_name="sep-backend-redis"}'
          stages:
          - regex:
              expression: 'stdout F \d+:\w \d+ \w+ \d+ \d+:\d+:\d+.\d+ ((?P<status_warn>([#]))|(?P<status_notice>([*]))|(?P<status_verbose>([-]))|(?P<status_debug>([.])))'
          - template:
              source: level
              template: "{{if .status_warn}}WARN{{else if .status_notice}}NOTICE{{else if .status_verbose}}VERBOSE{{else if .status_debug}}DEBUG{{end}}"
          - labels:
              level:
      - match:
          selector: '{k8s_namespace_name="singouins"}'
          stages:
          - regex:
              expression: 'stdout F ([^ ]*|-) - ([^ ]*|-) \[.*\] "[^ ]+ ((?P<get_metrics>(\/metrics))|(?P<get_status>(\/stub_status)))'
          - template:
              source: level
              template: "{{if .get_metrics}}TRACE{{else if .get_status}}TRACE{{end}}"
          - labels:
              level:
      - match:
          selector: '{k8s_container_name=~"sep-backend-promtail|sep-backend-prometheus|sep-backend-loki|sep-backend-api|sep-backend-backup"}'
          stages:
          - regex:
              expression: 'std(err|out) F ?(.*)?level=(?P<log_level>(\w*)) '
          - template:
              source: log_level
              template: "{{if .log_level}}{{ ToUpper .log_level }}{{end}}"
          - labels:
              level: log_level
      - match:
          selector: '{k8s_container_name=~"sep-backend-wikijs"}'
          stages:
          - regex:
              expression: 'std(err|out) F .* \[(JOB|MASTER)\] (?P<log_level>(\w*)): '
          - template:
              source: log_level
              template: "{{if .log_level}}{{ ToUpper .log_level }}{{end}}"
          - labels:
              level: log_level
      - match:
          selector: '{k8s_container_name="sep-backend-api"}'
          stages:
          - regex:
              expression: 'std(err|out) F (.*)? "[^ ]+ [^ ]+ [^ ]+" ((?P<status_warn>(40\d))|(?P<status_crit>(500))|(?P<status_info>(10\d|20\d|30\d))) '
          - template:
              source: level
              template: "{{if .status_warn}}WARN{{else if .status_crit}}CRIT{{else if .status_info}}INFO{{end}}"
          - labels:
              level:
      job_name: kubernetes-pods-name
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: k8s_app

      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: k8s_namespace_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: k8s_pod_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: k8s_container_name

      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__

      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__

    - pipeline_stages:
      - docker:
      job_name: kubernetes-pods-static
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: ^$
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_label_component
        target_label: __service__

      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__

      - action: drop
        regex: ^$
        source_labels:
        - __service__

      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: k8s_app

      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: k8s_namespace_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: k8s_pod_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: k8s_container_name

      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - __meta_kubernetes_pod_container_name
        target_label: __path__
