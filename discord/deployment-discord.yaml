apiVersion: apps/v1
kind: Deployment

metadata:
  namespace: singouins
  name: sep-backend-discord
  labels:
    tier: sep-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python
      tier: sep-backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: python
        tier: sep-backend
    spec:
      restartPolicy: Always

      containers:
      - name: sep-backend-discord
        image: singouins/discord:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: 128Mi
            cpu: 100m
          requests:
            memory: 64Mi
            cpu: 10m
        env:
        # Discord env vars
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: sep-backend-discord-secret
              key: token
        # MySQL variables
        - name: SEP_MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: sep-backend-mariadb-secret
              key: host
        - name: SEP_MYSQL_DB
          value: 'proto' # proto: Prototype | sep: Production
        - name: SEP_MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: sep-backend-discord-secret
              key: sql-user
        - name: SEP_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sep-backend-discord-secret
              key: sql-pass
        # PCS variables
        - name: SEP_PCS_URL
          valueFrom:
            secretKeyRef:
              name: sep-backend-pcs-secret
              key: pcs-url-public
        # Redis variables
        - name: SEP_REDIS_DB
          value: '1' # 1: Prototype | 0: Production
        # Other env vars
        - name: PYTHONUNBUFFERED
          value: 'True'
        - name: PYTHONIOENCODING
          value: 'UTF-8'
